version: "3.1"
services:
  checkout:
    image: checkout
    build: ./checkout/
    ports:
      - "8081:8081"
      - "7081:7081"
    volumes:
      - ./checkout:/checkout # for config read
    environment:
      CONFIG: checkout/config.compose.yaml
    networks:
      - net
    depends_on:
      - pgbouncer-checkout
  postgres-checkout:
    image: postgres:15
    command: -p 5433
    environment:
      POSTGRES_USER: checkout
      POSTGRES_PASSWORD: password
      POSTGRES_DB: checkout-db
    volumes:
      - db-data-checkout:/var/lib/postgresql/data
    ports:
      - 5433:5433
    networks:
      - net
  pgbouncer-checkout:
    image: bitnami/pgbouncer
    environment:
      POSTGRESQL_USERNAME: checkout
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_HOST: postgres-checkout
      POSTGRESQL_DATABASE: checkout-db
      POSTGRESQL_PORT: 5433
      PGBOUNCER_SET_DATABASE_USER: yes
      PGBOUNCER_SET_DATABASE_PASSWORD: yes
      PGBOUNCER_DATABASE: checkout-db
      PGBOUNCER_POOL_MODE: session
      PGBOUNCER_AUTH_USER: checkout
      PGBOUNCER_PORT: 6433
      PGBOUNCER_BIND_ADDRESS: pgbouncer-checkout
    ports:
      - 6433:6433
    depends_on:
      - postgres-checkout
    networks:
      - net
  loms:
    image: loms
    build: ./loms/
    ports:
      - "8082:8082"
      - "7082:7082"
    volumes:
      - ./loms:/loms  # for config read
    environment:
      CONFIG: loms/config.compose.yaml
    networks:
      - net
    depends_on:
      - pgbouncer-loms
  postgres-loms:
    image: postgres:15
    command: -p 5434
    environment:
      POSTGRES_USER: loms
      POSTGRES_PASSWORD: password
      POSTGRES_DB: loms-db
    volumes:
      - db-data-loms:/var/lib/postgresql/data
    ports:
      - 5434:5434
    networks:
      - net
  pgbouncer-loms:
    image: bitnami/pgbouncer
    environment:
      POSTGRESQL_USERNAME: loms
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_HOST: postgres-loms
      POSTGRESQL_DATABASE: loms-db
      POSTGRESQL_PORT: 5434
      PGBOUNCER_SET_DATABASE_USER: yes
      PGBOUNCER_SET_DATABASE_PASSWORD: yes
      PGBOUNCER_DATABASE: loms-db
      PGBOUNCER_POOL_MODE: session
      PGBOUNCER_AUTH_USER: loms
      PGBOUNCER_PORT: 6434
      PGBOUNCER_BIND_ADDRESS: pgbouncer-loms
    ports:
      - 6434:6434
    depends_on:
      - postgres-loms
    networks:
      - net

  notification:
    image: notification
    build: ./notifications
    networks:
      - net
    ports:
     - "8083:8083"
    volumes:
      - ./notifications:/notifications # for config read
    depends_on:
      - kafka1
      - kafka2

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - net
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=3
      - ZOOKEEPER_SERVERS=zookeeper:2888:3888
  kafka1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    networks:
      - net
    ports:
      - "9091:9091"
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://localhost:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER=zookeeper:2181

  kafka2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    networks:
      - net
    ports:
      - "9092:9092"
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=2
      - ZOOKEEPER=zookeeper:2181

  redpandadata-console:
    image: redpandadata/console:latest
    networks:
      - net
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka1:29091,kafka2:29092
    depends_on:
      - kafka1
      - kafka2

  prometheus:
    image: prom/prometheus
    networks:
      - net
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway
  grafana:
    image: grafana/grafana-oss
    networks:
      - net
    ports:
      - 3000:3000
    volumes:
      - ./data:/var/lib/grafana
    links:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.18
    networks:
      - net
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411
    environment:
      - COLLECTOR_OTLP_ENABLED=true


volumes:
  db-data-checkout:
  db-data-loms:

networks:
  net:
    driver: bridge